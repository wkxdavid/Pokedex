.stats-img-content {
    display: flex;
    direction: row;
    flex-wrap: wrap;
    justify-content: center;
}

footer {
    justify-content: center;
}

.creature, .chart {
    height: 100%;
    width: 100%;
}

div.neighbor-left > a, div.neighbor-right, a {
    display: flex;
    justify-content: center;
}

/* Used for styling the upper portions of the page, such as the name and the neighbor
   pokemon and the buttons*/
.name {
    display: flex;
    justify-content: center;
}

.name h1 {
    margin-top: 5%;
    margin-bottom: 5%;
    margin-right: 1%;
    margin-left: 1%;
    font-size: 20px;
    text-align: center;
}

.name > h2 {
    font-size: 100%;
}

.neighbor-left a {
    display: flex;
}

.neighbor-right a {
    display: flex;
    flex-direction: row-reverse;
}

.neighbor-left a > img, .neighbor-right a > img {
    height: 50px;
    width: 50px;
}

.neighbor-left, .neighbor-right {
    margin-left: 20px;
    margin-right: 20px;
    margin-bottom: 25px;
    border: 6px solid #62bd5a;
    background-color: rgba(224, 225, 221, .8);
    padding-left: 5px;
    padding-right: 5px;
}

.neighbor-left a:hover {
    animation: slide-left 1s infinite;
    animation-timing-function: linear;
}

/* Learnt animations thanks to this code: https://codepen.io/Digitango/pen/YQQBXR
   Understood how animations can be made in CSS using "keyframes" where the percentage
   of the animation complete is marked with structure of the animation. */
@keyframes slide-left {
    0% { transform: translate(2px, 0); }
    50% { transform: translate(-10px, 0); }
    100% { transform: translate(0.5px, 0); }
  }

.neighbor-right a:hover {
    animation: slide-right 1s infinite;
    animation-timing-function: linear;
}

/* Learnt animations thanks to this code: https://codepen.io/Digitango/pen/YQQBXR
   Understood how animations can be made in CSS using "keyframes" where the percentage
   of the animation complete is marked with structure of the animation. */
@keyframes slide-right {
    0% { transform: translate(2px, 0); }
    50% { transform: translate(10px, 0); }
    100% { transform: translate(0.5px, 0); }
  }

.back-and-forward {
    display: flex;
    flex-direction: column;

}

.physicals {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    background-color: 	rgb(115, 147, 179, 00.5);
    width: 100%;
    height: 500px;
    justify-content: center;
    padding: 10px;
    border-radius: 5%;
    margin: 10px;
}
.physical-stat {
    display: flex;
    flex-direction: column;
    width: 50%;
    height: 10vh;
    margin: 0px;
    text-align: center;
}

.data {
    color: black;
}

.chart-container {
    justify-content: center;
}

.chart {
    border-radius: 30px;
    width: 100%;
    justify-content: center;

}

@media (min-width: 768px) {
    .creature {
        width: 500px;
        height: 100%;
    }

    .physicals {
        width: 500px;
    }

    .back-and-forward {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
    }

    .name > h2 {
        font-size: 100%;
    }

    .name h1 {
        font-size: 42px;
    }

    .neighbor-left, .neighbor-right {
        width: 60%;
    }
}
